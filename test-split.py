#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Mar 12 19:37:55 2018
@author: dipu
"""
#!/anaconda3/bin/python
import json
import requests
import sys
from sklearn import tree
import cgi

def count_column(split_value):
    column_count=-1
    for row in split_value:
        if(row[1] != 'yes' and row[1]!='no'):
            column_count += 1
        else:
            column_count += 1
            break
    return column_count

def get_matrix(value_list,column_count):
    final_value_list=[]
    labels=[]
    list_iterator = 0
    while(list_iterator < len(value_list)):
        value_row = []
        for j in range(column_count+1):
            if(value_list[list_iterator].lower() == 'yes'):
                labels.append(0)
            elif(value_list[list_iterator].lower() == 'no'):
                labels.append(1)
            elif(value_list[list_iterator] == ''):
                pass
            else:
                value_row.append(value_list[list_iterator])
            list_iterator += 1
            if(list_iterator >= len(value_list)):
                break
        final_value_list.append(value_row)
        if(list_iterator >= len(value_list)):
            break
    testdata=[]
    testdata.append(final_value_list[-1])
    features = final_value_list[:-1]
    return features, labels, testdata

def prepare_data(pythondata):
    split_value_list = [(lambda x: x.split(":"))(x) for x in pythondata]
    split_value_list = split_value_list[1:]
    column_count= count_column(split_value_list) 
    value_list = [(lambda x: x[1])(x) for x in split_value_list]
    features, labels, testdata=get_matrix(value_list,column_count)
    return features, labels, testdata


if __name__ == "__main__":
    '''imports from php'''
    who = sys.argv

    '''turns json data into string'''
    json_string = json.dumps(who)
    pythondata = json.loads(json_string)
    '''
    pythondata=['test.py', 
     '00:2', '01:67', '02:12', '03:20000','04:1444','05:15478','06:0555', '04:yes',
     '10:5', '11:54', '12:14', '13:45000','04:1444','05:15478','06:0555', '14:yes',
     '20:12', '21:60', '22:45', '23:450000','04:1444','05:15478','06:0555', '24:no', 
     '30:10', '31:50', '32:20', '33:100000','04:1444','05:15478', '34:']
    cmd_data=00:2 01:67 02:12 03:20000 04:2 05:67 06:12 07:20000 08:2 09:67 010:12 011:20000 012:2 013:67 014:12 015:20000 016:12 017:20000 018:2 019:67 020:12 021:20000  022:yes 10:5 11:54 12:14 13:45000 14:2 15:67 16:12 17:20000 18:2 19:67 110:12 111:20000 112:2 113:67 114:12 115:20000 116:12 117:20000 118:2 119:67 120:12 121:20000 122:yes 20:12 21:60 22:45 23:450000 24:2 25:67 26:12 27:20000 28:2 29:67 210:12 211:20000 212:2 213:67 214:12 215:20000 216:12 217:20000 218:2 219:67 220:12 221:20000 222:no 00:2 01:67 02:12 03:20000 04:2 05:67 06:12 07:20000 08:2 09:67 010:12 011:20000 012:2 013:67 014:12 015:20000 016:12 017:20000 018:2 019:67 020:12 021:20000 022:yes 10:5 11:54 12:14 13:45000 14:2 15:67 16:12 17:20000 18:2 19:67 110:12 111:20000 112:2 113:67 114:12 115:20000 116:12 117:20000 118:2 119:67 120:12 121:20000 122:yes 20:12 21:60 22:45 23:450000 24:2 25:67 26:12 27:20000 28:2 29:67 210:12 211:20000 212:2 213:67 214:12 215:20000 216:12 217:20000 218:2 219:67 220:12 221:20000 222:no 00:2 01:67 02:12 03:20000 04:2 05:67 06:12 07:20000 08:2 09:67 010:12 011:20000 012:2 013:67 014:12 015:20000 016:12 017:20000 018:2 019:67 020:12 021:20000  022:yes 10:5 11:54 12:14 13:45000 14:2 15:67 16:12 17:20000 18:2 19:67 110:12 111:20000 112:2 113:67 114:12 115:20000 116:12 117:20000 118:2 119:67 120:12 121:20000 122:yes 20:12 21:60 22:45 23:450000 24:2 25:67 26:12 27:20000 28:2 29:67 210:12 211:20000 212:2 213:67 214:12 215:20000 216:12 217:20000 218:2 219:67 220:12 221:20000 222:no 00:2 01:67 02:12 03:20000 04:2 05:67 06:12 07:20000 08:2 09:67 010:12 011:20000 012:2 013:67 014:12 015:20000 016:12 017:20000 018:2 019:67 020:12 021:20000 022:yes 10:5 11:54 12:14 13:45000 14:2 15:67 16:12 17:20000 18:2 19:67 110:12 111:20000 112:2 113:67 114:12 115:20000 116:12 117:20000 118:2 119:67 120:12 121:20000 122:yes 20:12 21:60 22:45 23:450000 24:2 25:67 26:12 27:20000 28:2 29:67 210:12 211:20000 212:2 213:67 214:12 215:20000 216:12 217:20000 218:2 219:67 220:12 221:20000  222:no 00:2 01:67 02:12 03:20000 04:2 05:67 06:12 07:20000 08:2 09:67 010:12 011:20000 012:2 013:67 014:12 015:20000 016:12 017:20000 018:2 019:67 020:12 021:20000  022:yes 10:5 11:54 12:14 13:45000 14:2 15:67 16:12 17:20000 18:2 19:67 110:12 111:20000 112:2 113:67 114:12 115:20000 116:12 117:20000 118:2 119:67 120:12 121:20000 122:yes 20:12 21:60 22:45 23:450000 24:2 25:67 26:12 27:20000 28:2 29:67 210:12 211:20000 212:2 213:67 214:12 215:20000 216:12 217:20000 218:2 219:67 220:12 221:20000  222:no 00:2 01:67 02:12 03:20000 04:2 05:67 06:12 07:20000 08:2 09:67 010:12 011:20000 012:2 013:67 014:12 015:20000 016:12 017:20000 018:2 019:67 020:12 021:20000  022:yes 10:5 11:54 12:14 13:45000 14:2 15:67 16:12 17:20000 18:2 19:67 110:12 111:20000 112:2 113:67 114:12 115:20000 116:12 117:20000 118:2 119:67 120:12 121:20000 122:yes 20:12 21:60 22:45 23:450000 24:2 25:67 26:12 27:20000 28:2 29:67 210:12 211:20000 212:2 213:67 214:12 215:20000 216:12 217:20000 218:2 219:67 220:12 221:20000  222:no 00:2 01:67 02:12 03:20000 04:2 05:67 06:12 07:20000 08:2 09:67 010:12 011:20000 012:2 013:67 014:12 015:20000 016:12 017:20000 018:2 019:67 020:12 021:20000  022:yes 10:5 11:54 12:14 13:45000 14:2 15:67 16:12 17:20000 18:2 19:67 110:12 111:20000 112:2 113:67 114:12 115:20000 116:12 117:20000 118:2 119:67 120:12 121:20000 122:yes 20:12 21:60 22:45 23:450000 24:2 25:67 26:12 27:20000 28:2 29:67 210:12 211:20000 212:2 213:67 214:12 215:20000 216:12 217:20000 218:2 219:67 220:12 221:20000  222:no 30:10 31:50 32:20 33:100000 34:2 35:67 36:12 37:20000 38:2 39:67 310:12 311:20000 312:2 313:67 314:12 315:20000 316:12 317:20000 318:2 319:67 320:12 321:20000  322:
    '''
    pythondata=["test-split.py", "00:2", "01:67", "02:12", "03:20000", "04:2", "05:67", "06:12", "07:20000", "08:2", "09:67", "010:12", "011:20000", "012:2", "013:67", "014:12", "015:20000", "016:12", "017:20000", "018:2", "019:67", "020:12", "021:20000", "022:yes", "10:5", "11:54", "12:14", "13:45000", "14:2", "15:67", "16:12", "17:20000", "18:2", "19:67", "110:12", "111:20000", "112:2", "113:67", "114:12", "115:20000", "116:12", "117:20000", "118:2", "119:67", "120:12", "121:20000", "122:yes", "20:12", "21:60", "22:45", "23:450000", "24:2", "25:67", "26:12", "27:20000", "28:2", "29:67", "210:12", "211:20000", "212:2", "213:67", "214:12", "215:20000", "216:12", "217:20000", "218:2", "219:67", "220:12", "221:20000", "222:no", "00:2", "01:67", "02:12", "03:20000", "04:2", "05:67", "06:12", "07:20000", "08:2", "09:67", "010:12", "011:20000", "012:2", "013:67", "014:12", "015:20000", "016:12", "017:20000", "018:2", "019:67", "020:12", "021:20000", "022:yes", "10:5", "11:54", "12:14", "13:45000", "14:2", "15:67", "16:12", "17:20000", "18:2", "19:67", "110:12", "111:20000", "112:2", "113:67", "114:12", "115:20000", "116:12", "117:20000", "118:2", "119:67", "120:12", "121:20000", "122:yes", "20:12", "21:60", "22:45", "23:450000", "24:2", "25:67", "26:12", "27:20000", "28:2", "29:67", "210:12", "211:20000", "212:2", "213:67", "214:12", "215:20000", "216:12", "217:20000", "218:2", "219:67", "220:12", "221:20000", "222:no", "00:2", "01:67", "02:12", "03:20000", "04:2", "05:67", "06:12", "07:20000", "08:2", "09:67", "010:12", "011:20000", "012:2", "013:67", "014:12", "015:20000", "016:12", "017:20000", "018:2", "019:67", "020:12", "021:20000", "022:yes", "10:5", "11:54", "12:14", "13:45000", "14:2", "15:67", "16:12", "17:20000", "18:2", "19:67", "110:12", "111:20000", "112:2", "113:67", "114:12", "115:20000", "116:12", "117:20000", "118:2", "119:67", "120:12", "121:20000", "122:yes", "20:12", "21:60", "22:45", "23:450000", "24:2", "25:67", "26:12", "27:20000", "28:2", "29:67", "210:12", "211:20000", "212:2", "213:67", "214:12", "215:20000", "216:12", "217:20000", "218:2", "219:67", "220:12", "221:20000", "222:no", "00:2", "01:67", "02:12", "03:20000", "04:2", "05:67", "06:12", "07:20000", "08:2", "09:67", "010:12", "011:20000", "012:2", "013:67", "014:12", "015:20000", "016:12", "017:20000", "018:2", "019:67", "020:12", "021:20000", "022:yes", "10:5", "11:54", "12:14", "13:45000", "14:2", "15:67", "16:12", "17:20000", "18:2", "19:67", "110:12", "111:20000", "112:2", "113:67", "114:12", "115:20000", "116:12", "117:20000", "118:2", "119:67", "120:12", "121:20000", "122:yes", "20:12", "21:60", "22:45", "23:450000", "24:2", "25:67", "26:12", "27:20000", "28:2", "29:67", "210:12", "211:20000", "212:2", "213:67", "214:12", "215:20000", "216:12", "217:20000", "218:2", "219:67", "220:12", "221:20000", "222:no", "00:2", "01:67", "02:12", "03:20000", "04:2", "05:67", "06:12", "07:20000", "08:2", "09:67", "010:12", "011:20000", "012:2", "013:67", "014:12", "015:20000", "016:12", "017:20000", "018:2", "019:67", "020:12", "021:20000", "022:yes", "10:5", "11:54", "12:14", "13:45000", "14:2", "15:67", "16:12", "17:20000", "18:2", "19:67", "110:12", "111:20000", "112:2", "113:67", "114:12", "115:20000", "116:12", "117:20000", "118:2", "119:67", "120:12", "121:20000", "122:yes", "20:12", "21:60", "22:45", "23:450000", "24:2", "25:67", "26:12", "27:20000", "28:2", "29:67", "210:12", "211:20000", "212:2", "213:67", "214:12", "215:20000", "216:12", "217:20000", "218:2", "219:67", "220:12", "221:20000", "222:no", "00:2", "01:67", "02:12", "03:20000", "04:2", "05:67", "06:12", "07:20000", "08:2", "09:67", "010:12", "011:20000", "012:2", "013:67", "014:12", "015:20000", "016:12", "017:20000", "018:2", "019:67", "020:12", "021:20000", "022:yes", "10:5", "11:54", "12:14", "13:45000", "14:2", "15:67", "16:12", "17:20000", "18:2", "19:67", "110:12", "111:20000", "112:2", "113:67", "114:12", "115:20000", "116:12", "117:20000", "118:2", "119:67", "120:12", "121:20000", "122:yes", "20:12", "21:60", "22:45", "23:450000", "24:2", "25:67", "26:12", "27:20000", "28:2", "29:67", "210:12", "211:20000", "212:2", "213:67", "214:12", "215:20000", "216:12", "217:20000", "218:2", "219:67", "220:12", "221:20000", "222:no", "00:2", "01:67", "02:12", "03:20000", "04:2", "05:67", "06:12", "07:20000", "08:2", "09:67", "010:12", "011:20000", "012:2", "013:67", "014:12", "015:20000", "016:12", "017:20000", "018:2", "019:67", "020:12", "021:20000", "022:yes", "10:5", "11:54", "12:14", "13:45000", "14:2", "15:67", "16:12", "17:20000", "18:2", "19:67", "110:12", "111:20000", "112:2", "113:67", "114:12", "115:20000", "116:12", "117:20000", "118:2", "119:67", "120:12", "121:20000", "122:yes", "20:12", "21:60", "22:45", "23:450000", "24:2", "25:67", "26:12", "27:20000", "28:2", "29:67", "210:12", "211:20000", "212:2", "213:67", "214:12", "215:20000", "216:12", "217:20000", "218:2", "219:67", "220:12", "221:20000", "222:no", "30:10", "31:50", "32:20", "33:100000", "34:2", "35:67", "36:12", "37:20000", "38:2", "39:67", "310:12", "311:20000", "312:2", "313:67", "314:12", "315:20000", "316:12", "317:20000", "318:2", "319:67", "320:12", "321:20000", "322:"]

    features, labels, testdata = prepare_data(pythondata)
    clf = tree.DecisionTreeClassifier()
    clf = clf.fit(features, labels)
    answer = clf.predict(testdata)

    if answer == 0:
        print('yes')
    else:
        print('no')

